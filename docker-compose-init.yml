version: "3.8"
volumes:
  php-fpm-socket:
  db-store:
  psysh-store:
  symphony-vendor-store:
networks:
  nw-symphony:
    driver: bridge
services:
  app:
    build:
      context: .
      dockerfile: ./docker/php-laravel/Dockerfile
    container_name: symphony-app
    env_file: ./docker/php-laravel/.env
    networks:
      - nw-symphony
    volumes:
      - type: bind
        source: ./docker/php-laravel/php-fpm.d/zzz-www.conf
        target: /usr/local/etc/php-fpm.d/zzz-www.conf
      - type: bind
        source: ./docker/php-laravel/php.ini
        target: /usr/local/etc/php/php.ini
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend
        target: /work/backend
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
      - type: volume
        source: symphony-vendor-store
        target: /work/backend/vendor
        volume:
          nocopy: true

  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: symphony-web
    env_file: ./docker/nginx/.env
    # ports:
    #   - target: 8000
    #     published: ${WEB_PORT:-80}
    #     protocol: tcp
    #     mode: host
    networks:
      - nw-symphony
    ports:
      - 8000:80
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend
        target: /work/backend
      - type: volume
        source: symphony-vendor-store
        target: /work/backend/vendor
        volume:
          nocopy: true

  db:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    container_name: symphony-db
    env_file: ./docker/mysql/.env
    networks:
      - nw-symphony
    ports:
      - target: 3306
        published: ${PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: synphony-frontend
    networks:
      - nw-symphony
    volumes:
      - type: bind
        source: ./frontend
        target: /frontend
      - /frontend/node_modules
    working_dir: /frontend
    ports:
      - 3000:3000
    tty: true
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "yarn && yarn start"

  mailcatcher:
    image: schickling/mailcatcher
    networks:
      - nw-symphony
    ports:
      - 1080:1080
